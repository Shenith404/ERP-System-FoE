@using ERP_GraduateManagement.DTOs.Response
@using System.Net.Http.Json
@using Microsoft.JSInterop
@using MudBlazor
@using PdfSharpCore.Drawing
@using PdfSharpCore.Pdf
@using System.IO
@using System.Diagnostics
@inject IJSRuntime jsRuntime

<h3>Graduate Filter Page</h3>

@if (_graduates.Count > 0)
{
    <MudDataGrid Items="_graduates" Filterable="true" Bordered="true" Dense="true">
        <Columns>
            <PropertyColumn Property="x => x.RegNo" Title="Registration Number" />
            <PropertyColumn Property="x => x.FullName" Title="Full Name" />
            <PropertyColumn Property="x => x.ContactNo" Title="Contact Number" />
            <PropertyColumn Property="x => x.Email" Title="Email" />
            <PropertyColumn Property="x => x.Degree" Title="Specialization" />
            <PropertyColumn Property="x => x.CurrentCompany" Title="Company" />
            <PropertyColumn Property="x => x.CurrentJobPosition" Title="Job Position" />
        </Columns>

        <PagerContent>
            <MudDataGridPager />
        </PagerContent>
    </MudDataGrid>

    <div style="margin-top: 20px;">
        <MudButton Disabled="@_processing" OnClick="@ExportToExcel" Variant="Variant.Filled" Color="Color.Primary">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Export to Excel</MudText>
            }
        </MudButton>
    </div>
}
else
{
    <MudProgressLinear Color="Color.Primary" Size="Size.Large" Indeterminate="true" Class="my-7" />
}

@code {
    private bool _processing = false;
    private HttpClient Http = new HttpClient();
    private List<GetGraduateResponse> _graduates = new List<GetGraduateResponse>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _graduates = await Http.GetFromJsonAsync<List<GetGraduateResponse>>("https://localhost:7111/ApiGateWay/Graduate-api/Graduates/Get");
        }
        catch (Exception ex)
        {
            _graduates = null;
        }
    }

    private async Task ExportToExcel()
    {
        _processing = true;
        var response = await Http.GetAsync("https://localhost:7111/ApiGateWay/Graduate-api/Graduates/export");
        if (response.IsSuccessStatusCode)
        {
            var fileName = "Alumni.xlsx";
            var content = await response.Content.ReadAsByteArrayAsync();
            await jsRuntime.InvokeVoidAsync("saveAsFile", fileName, Convert.ToBase64String(content));
        }
        _processing = false;
    }
}
