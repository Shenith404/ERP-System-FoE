@page "/confirm-Email"
@layout NoNavLayout
<div class="page" style="margin-top:-65px">
    <MudLayout>
        <div style="background-image: url('Assets/background-login.png'); background-size: cover; background-position: center; height: 430px; width: 100%; position: relative;">
            <div style="position: absolute; top: 0; left: 0; width: 100%;margin-top: -60px; height: 100%; display: flex; justify-content: center; align-items: center;">
                <MudImage Src="Assets/image3.png" Alt="UOR" Width="80" Height="100" Elevation="30" Class="rounded-lg" />
                <div style="display: flex; flex-direction: column; align-items: center; padding-left: 20px; padding-right: 20px;">
                    <MudText Typo="Typo.h4" Class="pa-2" Style="@($"color:{Colors.Grey.Lighten5}; font-weight: bold; ")">FACULTY OF ENGINEERING</MudText>
                    <MudText Typo="Typo.h5" Class="pa-2" Style="@($"color:{Colors.Grey.Lighten5}; font-weight: bold;")">UNIVERSITY OF RUHUNA</MudText>
                </div>
                <MudImage Src="Assets/image2.png" Alt="UOR" Width="80" Height="100" Elevation="30" Class="rounded-lg" />
            </div>
        </div>
        <div style="display: flex; justify-content: center; position: relative; margin-top: -100px; margin-bottom: 120px; margin-left: -85px;">
            <MudGrid Justify="Justify.Center" Class="mt-n10 pa-20">
                <MudItem Class="mx-auto">
                    <MudCard Outlined="true" Style="border-radius: 10px; width: 120%; max-width: 500px;">
                        <MudCardContent Style="display: flex; justify-content: center;">
                            <MudIcon Icon="@Icons.Material.Filled.Email" Color="Color.Error" Size="Size.Large"></MudIcon>
                        </MudCardContent>
                        <MudCardContent Class="pa-20">
                            <MudText Align="Align.Center" Style="@($"color:{Colors.Red.Default}; padding-top: 5px;")" Typo="Typo.h4">
                                <span style="font-weight: bold; font-family: 'Inter'; font-size: 22px;">Your Email is Not Confirmed</span>
                            </MudText>

                            <MudText Style="text-align:center">
                                Your email address is still unconfirmed.
                            </MudText>
                            <MudText Style="text-align:center">
                                Please Try Again!
                            </MudText>
                        </MudCardContent>
                        <MudCardActions Style="display: flex; justify-content: center; padding: 2px 10px 10px 10px;">
                            <MudButton OnClick="Resend" Disabled="@_processing" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium" Style="width: 70%; height: 40px; border-radius: 7px; margin: 10px 0;">
                                @if (_processing)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                    <MudText Class="ms-2">Sending</MudText>
                                }
                                else
                                {
                                    <span style="font-family: 'Inter'; font-size: 12px;">Resend</span>
                                }
                            </MudButton>
                        </MudCardActions>
                        <MudCardActions Style="display: flex; justify-content: center; padding: 2px 10px 10px 10px;">
                            <MudButton OnClick="GoToHomePage" ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Medium" Style="width: 70%; height: 40px; border-radius: 7px; margin: 10px 0;">
                                Go To HomePage
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>

        </div>
    </MudLayout>
</div>

@code{
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }


    private string Email { get; set; }

    private bool _processing = false;

    protected override async Task OnInitializedAsync()
    {

        snackbar.Clear();
        snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
        Email = await store.GetItemAsync<string>("Email");

        var user = (await AuthenticationState).User;
        if (user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }
        await base.OnInitializedAsync();
    }



    public void GoToHomePage()
    {
        NavigationManager.NavigateTo("/");
    }


    private async Task Resend()
    {
        _processing = true;
        var result = await accountService.ResendConfirmationEmail(Email);

        if (result != null)
        {
            snackbar.Add(result, MudBlazor.Severity.Success);
        }
        else
        {
            snackbar.Add("Something is wrong , try again", MudBlazor.Severity.Error);

        }

        _processing = false;

    }
}
