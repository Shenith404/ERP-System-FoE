@using MudBlazorUI.Auth.Services
@layout MainLayout
@inherits LayoutComponentBase





<MudPaper Width="240px" Height="100vh" Elevation="1" Class="py-3">

    <MudNavMenu Color="Color.Info">

        <AuthorizeView Roles="Admin">
            <Authorized >
                <MudNavGroup Title="Admin" Icon="@Icons.Material.Filled.AdminPanelSettings" IconColor="Color.Primary">
                    <MudNavGroup Title="User Management" Icon="@Icons.Material.Filled.ManageAccounts" IconColor="Color.Primary">
                        <MudNavLink Href="/users-list" Icon="@Icons.Material.Filled.List" IconColor="Color.Primary">All Users</MudNavLink>
                        <MudNavLink Href="/Create-user" Icon="@Icons.Material.Filled.Create" IconColor="Color.Primary">Create User</MudNavLink>
                    </MudNavGroup>


      
                    <MudNavLink Href="/login-details" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Info" IconColor="Color.Primary">User Login Infos</MudNavLink>

                </MudNavGroup>
            </Authorized>
        </AuthorizeView>

        @* dept *@

        <AuthorizeView Roles="Admin,Staff,Lecture">
            <Authorized >
                <MudNavGroup Title="Department" Icon="@Icons.Material.Filled.PeopleOutline" IconColor="Color.Primary">
                    <MudNavLink Href="/department/graduates" Icon="@Icons.Material.Filled.Man" IconColor="Color.Primary">Graduates</MudNavLink>
                    <MudNavGroup Title="Laboratory" Icon="@Icons.Material.Filled.Science" IconColor="Color.Primary">
                        <MudNavLink Href="/department/labEquipments" Icon="@Icons.Material.Filled.Inventory" IconColor="Color.Primary">Lab Equipments</MudNavLink>
                        <MudNavLink Href="/department/labSchedules" Icon="@Icons.Material.Filled.Schedule" IconColor="Color.Primary">Laboratory Schedules</MudNavLink>
                    </MudNavGroup>
                    <MudNavGroup Title="Work Load" Icon="@Icons.Material.Filled.Work" IconColor="Color.Primary">
                        <MudNavLink Href="/department/workloads" Icon="@Icons.Material.Filled.WorkOutline" IconColor="Color.Primary">Works</MudNavLink>
                        <MudNavLink Href="/department/staff" Icon="@Icons.Material.Filled.Groups2" IconColor="Color.Primary">Staff</MudNavLink>
                        <MudNavLink Href="/department/assignwork" Icon="@Icons.Material.Filled.AssignmentInd" IconColor="Color.Primary">Assign Work</MudNavLink>
                    </MudNavGroup>
                </MudNavGroup>
            </Authorized>
        </AuthorizeView>

        @* Academic *@
        <AuthorizeView Roles="Admin,Staff,Lecture">
           <Authorized>
                <MudNavGroup Title="Academic" Icon="@Icons.Material.Filled.School" IconColor="Color.Primary">
                    <MudNavMenu Rounded="true" Margin="Margin.Normal" Color="Color.Error" Class="pa-2">
                        <MudNavLink Href="/ModuleManagementTabs" Icon="@Icons.Material.Filled.Subject" IconColor="Color.Primary">Modules</MudNavLink>
                        <MudNavLink Href="/ResultManagementTabs" Icon="@Icons.Material.Filled.Assessment" IconColor="Color.Primary">Results</MudNavLink>
                        <MudNavLink Href="/MentoringManagementPage" Icon="@Icons.Material.Filled.People" IconColor="Color.Primary">Mentoring</MudNavLink>
                        <MudNavLink Href="/RequestManagementTabs" Icon="@Icons.Material.Filled.CompareArrows" IconColor="Color.Primary">Requests</MudNavLink>
                    </MudNavMenu>
                </MudNavGroup>
           </Authorized>
       </AuthorizeView>

    </MudNavMenu>


   

   

</MudPaper>





@code {

    private string? currentUrl;

    private string name;
    private string email;
    private Guid id;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    private void logOut()
    {
         (authenticationStateProvider as CustomAuthenticationStateProvider)?.NotifyUserLogout();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }











}